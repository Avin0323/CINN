
.. _program_listing_file__home_chunwei_project_cinn2_cinn_backends_cuda_util.h:

Program Listing for File cuda_util.h
====================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_chunwei_project_cinn2_cinn_backends_cuda_util.h>` (``/home/chunwei/project/cinn2/cinn/backends/cuda_util.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   #ifdef CINN_WITH_CUDA
   
   #include <cuda.h>
   #include <cuda_runtime.h>
   
   #include <string>
   #include <tuple>
   #include <unordered_map>
   #include <vector>
   
   #include "cinn/runtime/cinn_runtime.h"
   
   #define CUDA_DRIVER_CALL(x)                                             \
     {                                                                     \
       CUresult result = x;                                                \
       if (result != CUDA_SUCCESS && result != CUDA_ERROR_DEINITIALIZED) { \
         const char* msg;                                                  \
         cuGetErrorName(result, &msg);                                     \
         LOG(FATAL) << "CUDAError: " #x " failed with error: " << msg;     \
       }                                                                   \
     }
   
   #define CUDA_CALL(func)                                                                            \
     {                                                                                                \
       cudaError_t e = (func);                                                                        \
       CHECK(e == cudaSuccess || e == cudaErrorCudartUnloading) << "CUDA: " << cudaGetErrorString(e); \
     }
   
   #define NVRTC_CALL(x)                                                                         \
     {                                                                                           \
       nvrtcResult result = x;                                                                   \
       if (result != NVRTC_SUCCESS) {                                                            \
         LOG(FATAL) << "NVRTC error: " #x " failed with error: " << nvrtcGetErrorString(result); \
       }                                                                                         \
     }
   
   namespace cinn {
   namespace backends {
   
   // CUDA syntax for thread axis.
   std::string cuda_thread_axis_name(int level);
   
   // CUDA syntax for block axis.
   std::string cuda_block_axis_name(int level);
   
   }  // namespace backends
   }  // namespace cinn
   
   #endif  // CINN_WITH_CUDA
