
.. _program_listing_file__home_chunwei_project_cinn2_cinn_backends_extern_func_jit_register.cc:

Program Listing for File extern_func_jit_register.cc
====================================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_chunwei_project_cinn2_cinn_backends_extern_func_jit_register.cc>` (``/home/chunwei/project/cinn2/cinn/backends/extern_func_jit_register.cc``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #include "cinn/backends/extern_func_jit_register.h"
   
   namespace cinn {
   namespace backends {
   
   void RegisterExternFunctionHelper(const std::string &fn_name,
                                     std::unique_ptr<FunctionProto> &&fn_proto,
                                     Target target,
                                     void *fn_ptr) {
     ExternFunctionProtoRegistry::Global().Register(fn_name, fn_proto.release());
     CHECK(ExternFunctionProtoRegistry::Global().Lookup(fn_name));
   
     ExternFunctionEmitterRegistry::Global().Register(ExternFuncID{TargetToBackendRepr(target), fn_name.c_str()},
                                                      new backends::ExternFunctionLLVMEmitter(fn_name));
   
     RuntimeSymbolRegistry::Global().RegisterFn(fn_name, reinterpret_cast<void *>(fn_ptr));
   }
   
   void RegisterExternFunction::End() {
     auto fn_proto = fn_proto_builder_.Build();
     RegisterExternFunctionHelper(fn_name_, std::move(fn_proto), target_, fn_ptr_);
   }
   
   }  // namespace backends
   }  // namespace cinn
